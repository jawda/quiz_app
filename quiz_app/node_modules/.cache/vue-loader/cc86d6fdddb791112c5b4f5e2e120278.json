{"remainingRequest":"C:\\Git\\vue_testing\\quiz_app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Git\\vue_testing\\quiz_app\\src\\components\\QuestionBox.vue?vue&type=style&index=0&id=62ab2b85&scoped=true&lang=css&","dependencies":[{"path":"C:\\Git\\vue_testing\\quiz_app\\src\\components\\QuestionBox.vue","mtime":1625596921397},{"path":"C:\\Git\\vue_testing\\quiz_app\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Git\\vue_testing\\quiz_app\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Git\\vue_testing\\quiz_app\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Git\\vue_testing\\quiz_app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Git\\vue_testing\\quiz_app\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi5saXN0LWdyb3VwIHsNCiAgbWFyZ2luLWJvdHRvbTogMTVweDsNCn0NCi5saXN0LWdyb3VwLWl0ZW06aG92ZXINCnsNCiAgYmFja2dyb3VuZDogI0VFRTsNCiAgY3Vyc29yOiBwb2ludGVyOw0KfQ0KLmJ0bg0Kew0KICBtYXJnaW46IDAgNXB4Ow0KfQ0KDQouc2VsZWN0ZWR7DQogIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0Ymx1ZTsNCn0NCi5jb3JyZWN0ew0KICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZWVuOw0KfQ0KLmluY29ycmVjdHsNCiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRjb3JhbDsNCn0NCg=="},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"question-box-container\">\r\n    <b-jumbotron>\r\n      <template slot=\"lead\">\r\n        {{ currentQuestion.question | decoder}}\r\n      </template>\r\n      <hr class=\"my-4\" />\r\n\r\n      <b-list-group>\r\n        <b-list-group-item\r\n            v-for=\"(answer, index) in answers\"\r\n            :key=\"index\"\r\n            @click=\"selectAnswer(index)\"\r\n            :class=\"answerClass(index)\"\r\n        >\r\n          {{answer | decoder}}\r\n        </b-list-group-item>\r\n      </b-list-group>\r\n      <b-button\r\n          variant=\"primary\"\r\n          @click=\"submitAnswer\"\r\n          :disabled=\"selectedIndex === null || answered\"\r\n      >\r\n        Submit\r\n      </b-button>\r\n      <b-button @click=\"next\" variant=\"success\">\r\n        Next\r\n      </b-button>\r\n\r\n    </b-jumbotron>\r\n  </div>\r\n</template>\r\n<script>\r\nimport _ from 'lodash'\r\n\r\nexport default {\r\n  // variable reference data passed from parent App.vue in this case\r\n  props:{\r\n    currentQuestion: Object,\r\n    next: Function,\r\n    increment: Function\r\n  },\r\n  data() {\r\n    return{\r\n      selectedIndex: null,\r\n      correctIndex: null,\r\n      shuffledAnswers: [],\r\n      answered: false\r\n    }\r\n  },\r\n  computed: {\r\n    answers() {\r\n      //use this because we are referencing the prop above\r\n      let answers = [...this.currentQuestion.incorrect_answers]\r\n      answers.push(this.currentQuestion.correct_answer)\r\n      return answers\r\n    }\r\n  },\r\n  //run immediately and when called\r\n  watch: {\r\n    currentQuestion: {\r\n      immediate: true,\r\n      handler() {\r\n        this.selectedIndex = null\r\n        this.answered = false\r\n        this.shuffleAnswers()\r\n      }\r\n    }\r\n\r\n    //     (){\r\n    //   this.selectedIndex = null\r\n    //   this.shuffleAnswers()\r\n    // }\r\n  },\r\n  filters: {\r\n    decoder(str){\r\n      var textArea = document.createElement(\"textarea\");\r\n      textArea.innerHTML = str;\r\n      return textArea.value;\r\n    }\r\n  },\r\n  methods: {\r\n    //update selected answer on click\r\n    selectAnswer(index){\r\n      this.selectedIndex = index\r\n    },\r\n    //shuffle answers using lodash function when next is clicked\r\n    shuffleAnswers(){\r\n      let answers = [...this.currentQuestion.incorrect_answers, this.currentQuestion.correct_answer]\r\n      this.shuffledAnswers = _.shuffle(answers)\r\n      this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer)\r\n    },\r\n    submitAnswer(){\r\n      let isCorrect = false\r\n\r\n      if(this.selectedIndex === this.correctIndex) {\r\n        isCorrect = true\r\n      }\r\n      //used to enable/disable submit button\r\n      this.answered = true\r\n      //used to pass if answer is correct to the parent function in App.vue\r\n      this.increment(isCorrect)\r\n    },\r\n    answerClass(index){\r\n      let answerClass = ''\r\n      if(!this.answered && this.selectedIndex === index )\r\n      {\r\n        answerClass = 'selected'\r\n      }\r\n      else if (this.answered && this.correctIndex === index)\r\n      {\r\n        answerClass = 'correct'\r\n      }\r\n      else if (this.answered &&\r\n          this.selectedIndex === index &&\r\n          this.correctIndex !== index)\r\n      {\r\n        answerClass = 'incorrect'\r\n      }\r\n      return answerClass\r\n\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.list-group {\r\n  margin-bottom: 15px;\r\n}\r\n.list-group-item:hover\r\n{\r\n  background: #EEE;\r\n  cursor: pointer;\r\n}\r\n.btn\r\n{\r\n  margin: 0 5px;\r\n}\r\n\r\n.selected{\r\n  background-color: lightblue;\r\n}\r\n.correct{\r\n  background-color: lightgreen;\r\n}\r\n.incorrect{\r\n  background-color: lightcoral;\r\n}\r\n</style>"]}]}